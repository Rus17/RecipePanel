{"version":3,"sources":["api/api.js","redux/recipesReducer.js","redux/recipeReducer.js","redux/articlesReducer.js","redux/articleReducer.js","redux/categoriesReducer.js","redux/reduxStore.js","Components/Menu/MenuCont.jsx","Components/Categories/Categories.jsx","Components/Categories/CategoriesContainer.jsx","Components/FormsControl/FormsControl.jsx","Components/Categories/AddCategories.jsx","Components/Categories/AddCategoreisContainer.jsx","Components/Categories/EditCategory.jsx","Components/Categories/Category.jsx","Components/Categories/CategoryContainer.jsx","Components/Recipes/Recipes.jsx","Components/Recipes/RecipesContainer.jsx","Components/Recipes/AddRecipe.jsx","Components/Recipes/AddRecipeContainer.jsx","Components/Recipes/Recipe.jsx","Components/Recipes/RecipeContainer.jsx","Components/Articles/Articles.jsx","Components/Articles/ArticlesContainer.jsx","Components/Articles/AddArticle.jsx","Components/Articles/AddArticleContainer.jsx","Components/Articles/Article.jsx","Components/Articles/ArticleContainer.jsx","App.jsx","index.jsx","Components/FormsControl/formsControl.module.css"],"names":["server","initialState","recipes","getRecipesTC","dispatch","axios","then","response","type","getRecipes","data","setRecipeTC","title","text","categoryId","console","log","JSON","stringify","headers","setRecipeAPI","recipesReducer","state","action","recipe","categoryList","getRecipeTC","id","getRecipeAPI","getRecipe","updateRecipeTC","obj","updateRecipeAPI","_id","delResipeTC","delRecipeAPI","getCategoryListTC","getCategoryListAPI","recipeReducer","articles","getArticlesTC","getArticles","setArticleTC","description","setArticleAPI","articlesReducer","article","getArticleTC","getArticleAPI","getArticle","updateArticleTC","updateArticleAPI","delArticleAPI","getCategoryArticleListAPI","articleReducer","categories","recipeByCategory","parentsCategory","articlesCategory","getCategoriesTC","a","getCategories","addCategoryTC","parentId","addCategoryAPI","delCategoryTC","delCategoryAPI","updateCategoryTC","updateCategoryAPI","getRecipeByCategoryTC","getRecipeByCategoryAPI","getCategoryParentsAPI","getArticleByCategoryTC","getArticleByCategoryAPI","categoriesReducer","reducers","combineReducers","recipesPage","recipePage","articlesPage","articlePage","categoriesPage","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","MenuCont","className","to","Categories","props","showCategories","map","e","key","CategoriesContainer","this","React","Component","connect","TextArea","input","meta","formsStyles","formControl","touched","error","Input","Select","ReduxAddCategoriesForm","reduxForm","value","onSubmit","handleSubmit","Field","name","placeholder","component","AddCategories","useState","addDone","setEditMode","formData","ReduxEditCategoriesForm","editMode","Category","parents","c","status","setStatus","EditCategory","updatedAt","onClick","CategoryContainer","findInfoCategory","category","filter","match","params","idCat","setState","getFullCategoryInformationTC","WithUrlCategoryContainer","withRouter","Recipes","showRecipes","RecipesContainer","ReduxAddRecipeForm","AddRecipe","ReduxRecipeForm","Recipe","date","createObj","RecipeContainer","recipeId","refreshRecipe","prevProps","prevState","snapshot","WithUrlRecipe","Articles","showArticles","ArticlesContainer","ReduxAddArticleForm","AddArticle","ReduxArticleForm","Article","ArticleContainer","articleId","refreshArticle","WithUrlArticle","App","path","render","exact","AppContainer","AppConnect","AdminPanel","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5d2097d6.chunk.js","sourcesContent":["import * as axios from 'axios'\n\nconst server = 'https://test-task-server.herokuapp.com/'\n\n\n// --------------------------RECIPES---------------------------\n// --------------------------RECIPES---------------------------\n\n// ------------------------ Get recipes --------------------\nexport const getRecipesAPI = () => {\n   return  axios.get(`${server}api/v1/recipe/all`)\n}\n\n// ------------------------- Get recipe -------------------------\nexport const getRecipeAPI = (id) => {\n   return axios.get(`${server}api/v1/recipe/item/${id}`)\n}\n\n// ----------------------- Add recipe --------------------\nexport const setRecipeAPI = (title, text, categoryId) => {\n   console.log(\"api\", title, text, categoryId)\n   let data = JSON.stringify({title, text, categoryId})\n   return axios.post(`${server}api/v1/recipe/create`, data, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// ------------------------- Update recipe  -------------------------\nexport const updateRecipeAPI = (obj) => {\n   let data = JSON.stringify(obj)\n   return axios.put(`${server}api/v1/recipe/update`, data, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// ------------------------- Delete recipe  -------------------------\nexport const delRecipeAPI = (id) => {\n   console.log(id)\n   return axios.delete(`${server}api/v1/recipe/${id}`, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// ------------------------- Get Category List -------------------------\nexport const getCategoryListAPI = (id) => {\n   return axios.get(`${server}api/v1/recipe/categoryList/${id}`)\n\n}\n\n\n// --------------------------CATEGORIES---------------------------\n// --------------------------CATEGORIES---------------------------\n\n// ------------------------- Get all categories  -----------------------\nexport const getCategoriesAPI = () => {\n   return  axios.get(`${server}api/v1/category/all`)\n}\n\n// ------------------------- Add category  -------------------------\nexport const addCategoryAPI = (title, parentId) => {\n   let data = JSON.stringify({title, parentId})\n   return axios.post(`${server}api/v1/category/create`, data, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// ------------------------- Delete category  -------------------------\nexport const delCategoryAPI = (categoryId) => {\n   return axios.delete(`${server}api/v1/category/${categoryId}`)\n}\n\n// ------------------------- Update category  -------------------------\nexport const updateCategoryAPI = (data) => {\n   return axios.put(`${server}api/v1/category/update`, data, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// -------------------- Get recipe by category ------------------------\nexport const getRecipeByCategoryAPI = (categoryId) => {\n   return  axios.get(`${server}api/v1/recipe/byCategory/${categoryId}`)\n}\n\n// -------------------- Get parents Category ------------------------\nexport const getCategoryParentsAPI = (categoryId) => {\n   return  axios.get(`${server}api/v1/category/categoryList/${categoryId}`)\n}\n\n// -------------------- Get articles Category ------------------------\nexport const getArticleByCategoryAPI = (categoryId) => {\n   return  axios.get(`${server}api/v1/article/byCategory/${categoryId}`)\n}\n\n\n// --------------------------ARTICLES---------------------------\n// --------------------------ARTICLES---------------------------\n\n// ------------------------ Get articles --------------------\nexport const getArticlesAPI = () => {\n   return  axios.get(`${server}api/v1/article/all`)\n}\n\n// ------------------------- Get article -------------------------\nexport const getArticleAPI = (id) => {\n   return axios.get(`${server}api/v1/article/item/${id}`)\n}\n\n// ----------------------- Add article --------------------\nexport const setArticleAPI = (title, description, text, categoryId) => {\n   let data = JSON.stringify({title, description, text, categoryId})\n   return axios.post(`${server}api/v1/article/create`, data, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// ------------------------- Update article  -------------------------\nexport const updateArticleAPI = (obj) => {\n   let data = JSON.stringify(obj)\n   return axios.put(`${server}api/v1/article/update`, data, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// ------------------------- Delete article  -------------------------\nexport const delArticleAPI = (id) => {\n   console.log(id)\n   return axios.delete(`${server}api/v1/article/${id}`, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// ------------------------- Get Category List -------------------------\nexport const getCategoryArticleListAPI = (id) => {\n   return axios.get(`${server}api/v1/article/categoryList/${id}`)\n}\n","import {getRecipesAPI, setRecipeAPI} from './../api/api'\n\nconst GET_RECIPES = 'GET_RECIPES'\n\nlet initialState = {\n   recipes: []\n};\n\nconst recipesReducer = (state = initialState, action) => {\n   switch(action.type) {\n      case GET_RECIPES:\n         return {\n            ...state,\n            recipes: action.getRecipes\n         }\n\n      default:\n         return state;\n   }\n}\n\n// ------------------------- Action Creators -------------------------\n// ------------------------- Get categories -------------------------\nconst getRecipesAC = (getRecipes) => ({\n   type: GET_RECIPES,\n   getRecipes\n})\n\n\n// ------------------------- Thunk Creators  -------------------------\nexport const getRecipesTC = () =>{\n   return (dispatch) => {\n      getRecipesAPI()\n      .then((response) => {dispatch(getRecipesAC(response.data))})\n   }\n}\n\n\n// export const setRecipeTC = () => {\n//    console.log(\"Отправка 3\")\n//    return () => {console.log('Hello world')}}\n\nexport const setRecipeTC = (title, text, categoryId) => {\n   return (dispatch) => {\n      setRecipeAPI(title, text, categoryId)\n      .then(() => {dispatch(getRecipesTC())\n      })\n   }\n}\n\n\n// export const setRecipeTC = (title, text, categoryId) => async (dispatch) => {\n//       let response = await setRecipeAPI(title, text, categoryId)\n//       dispatch(getRecipesTC())\n// }\n\nexport default recipesReducer;\n","import {\n   getRecipeAPI,\n   updateRecipeAPI,\n   delRecipeAPI,\n   getCategoryListAPI\n} from './../api/api'\nimport {getRecipesTC} from \"./recipesReducer\"\n\nconst GET_RECIPE = 'GET_RECIPE'\nconst GET_CATEGORY_LIST = 'GET_CATEGORY_LIST'\n\nlet initialState = {\n   recipe: [],\n   categoryList: []\n};\n\nconst recipeReducer = (state = initialState, action) => {\n   switch(action.type) {\n      case GET_RECIPE:\n         return {\n            ...state,\n            recipe: action.getRecipe\n         }\n\n         case GET_CATEGORY_LIST:\n            return {\n               ...state,\n               categoryList: action.categoryList\n            }\n\n      default:\n         return state;\n   }\n}\n\n// ------------------------- Action Creators -------------------------\n// ------------------------- Get recipe -------------------------\nconst getRecipeAC = (getRecipe) => ({\n   type: GET_RECIPE,\n   getRecipe\n})\n\n// ------------------------- Get Category List -------------------------\n\nconst getCategoryListAC = (categoryList) => ({\n   type: GET_CATEGORY_LIST,\n   categoryList\n})\n\n\n\n// ------------------------- Thunk Creators  -------------------------\n// ------------------------- Get recipe -------------------------\nexport const getRecipeTC = (id) =>{\n   return (dispatch) => {\n      getRecipeAPI(id)\n      .then((response) => {\n         // console.log(response)\n         dispatch(getRecipeAC(response.data))\n      })\n   }\n}\n\n// ------------------------- Update recipe -------------------------\n\nexport const updateRecipeTC = (obj) =>{\n   return (dispatch) => {\n      updateRecipeAPI(obj)\n      .then((response) => {\n         console.log(response)\n         dispatch(getRecipeTC(response.data._id))\n      })\n   }\n}\n\n// ------------------------- Delete recipe -------------------------\n\nexport const delResipeTC = (id) =>{\n   return (dispatch) => {\n      delRecipeAPI(id)\n      .then(() => {\n         dispatch(getRecipesTC())\n      })\n   }\n}\n\n// ------------------------- Get Category List -------------------------\nexport const getCategoryListTC = (id) =>{\n   return (dispatch) => {\n      getCategoryListAPI(id)\n      .then((response) => {\n         // console.log(response)\n         dispatch(getCategoryListAC(response.data))\n      })\n   }\n}\n\n\n\n\nexport default recipeReducer;\n","import {getArticlesAPI, setArticleAPI} from './../api/api'\n\nconst GET_ARTICLES = 'GET_ARTICLES'\n\nlet initialState = {\n   articles: []\n};\n\nconst articlesReducer = (state = initialState, action) => {\n   switch(action.type) {\n      case GET_ARTICLES:\n         return {\n            ...state,\n            articles: action.getArticles\n         }\n\n      default:\n         return state;\n   }\n}\n\n// ------------------------- Action Creators -------------------------\n// ------------------------- Get categories -------------------------\nconst getArticlesAC = (getArticles) => ({\n   type: GET_ARTICLES,\n   getArticles\n})\n\n\n// ------------------------- Thunk Creators  -------------------------\nexport const getArticlesTC = () =>{\n   return (dispatch) => {\n      getArticlesAPI()\n      .then((response) => {dispatch(getArticlesAC(response.data))})\n   }\n}\n\nexport const setArticleTC = (title, description, text, categoryId) => {\n   return (dispatch) => {\n      setArticleAPI(title, description, text, categoryId)\n      .then(() => {dispatch(getArticlesTC())\n      })\n   }\n}\n\nexport default articlesReducer;\n","import {\n   getArticleAPI,\n   updateArticleAPI,\n   delArticleAPI,\n   getCategoryArticleListAPI\n} from './../api/api'\nimport {getArticlesTC} from \"./articlesReducer\"\n\nconst GET_ARTICLE = 'GET_ARTICLE'\nconst GET_CATEGORY_LIST = 'GET_CATEGORY_LIST'\n\nlet initialState = {\n   article: [],\n   categoryList: []\n};\n\nconst articleReducer = (state = initialState, action) => {\n   switch(action.type) {\n      case GET_ARTICLE:\n         return {\n            ...state,\n            article: action.getArticle\n         }\n\n         case GET_CATEGORY_LIST:\n            return {\n               ...state,\n               categoryList: action.categoryList\n            }\n\n      default:\n         return state;\n   }\n}\n\n// ------------------------- Action Creators -------------------------\n// ------------------------- Get article -------------------------\nconst getArticleAC = (getArticle) => ({\n   type: GET_ARTICLE,\n   getArticle\n})\n\n// ------------------------- Get Category List -------------------------\n\nconst getCategoryListAC = (categoryList) => ({\n   type: GET_CATEGORY_LIST,\n   categoryList\n})\n\n\n\n// ------------------------- Thunk Creators  -------------------------\n// ------------------------- Get article -------------------------\nexport const getArticleTC = (id) =>{\n   return (dispatch) => {\n      getArticleAPI(id)\n      .then((response) => {\n         // console.log(response)\n         dispatch(getArticleAC(response.data))\n      })\n   }\n}\n\n// ------------------------- Update article -------------------------\n\nexport const updateArticleTC = (obj) =>{\n   return (dispatch) => {\n      updateArticleAPI(obj)\n      .then((response) => {\n         console.log(response)\n         dispatch(getArticleTC(response.data._id))\n      })\n   }\n}\n\n// ------------------------- Delete article -------------------------\n\nexport const delResipeTC = (id) =>{\n   return (dispatch) => {\n      delArticleAPI(id)\n      .then(() => {\n         dispatch(getArticlesTC())\n      })\n   }\n}\n\n// ------------------------- Get Category List -------------------------\nexport const getCategoryListTC = (id) =>{\n   return (dispatch) => {\n      getCategoryArticleListAPI(id)\n      .then((response) => {\n         // console.log(response)\n         dispatch(getCategoryListAC(response.data))\n      })\n   }\n}\n\n\n\n\nexport default articleReducer;\n","import {\n  getCategoriesAPI,\n  addCategoryAPI,\n  delCategoryAPI,\n  updateCategoryAPI,\n  getRecipeByCategoryAPI,\n  getCategoryParentsAPI,\n  getArticleByCategoryAPI\n} from \"../api/api\"\n\n\nconst GET_CATEGORIES = \"GET_CATEGORIES\"\nconst PARENTS_CATEGORY = \"PARENTS_CATEGORY\"\nconst RECIPE_BY_CATEGORY = \"RECIPE_BY_CATEGORY\"\nconst ARTICLES_BY_CATEGORY = \"ARTICLES_BY_CATEGORY\"\n\nconst initialState = {\n   categories: [],\n   // edit: null,\n   recipeByCategory: [],\n   parentsCategory: [],\n   articlesCategory: []\n}\n\nconst categoriesReducer = (state = initialState, action) => {\n\n   switch (action.type) {\n\n      case GET_CATEGORIES: return {\n         ...state,\n         categories: action.getCategories\n      }\n\n      case RECIPE_BY_CATEGORY: return {\n         ...state,\n         recipeByCategory: action.recipeByCategory\n      }\n\n      case PARENTS_CATEGORY: return {\n         ...state,\n         parentsCategory: action.parentsCategory\n      }\n\n      case ARTICLES_BY_CATEGORY: return {\n         ...state,\n         articlesCategory: action.articlesCategory\n      }\n\n      default: return state\n\n   }\n}\n\n// ------------------------- Action Creators -------------------------\nexport const getCategoriesAC = (getCategories) => ({\n   type: GET_CATEGORIES,\n   getCategories\n})\n\n// -------------------- Get recipe by category ------------------------\nexport const getRecipeByCategoryAC = (recipeByCategory) => ({\n   type: RECIPE_BY_CATEGORY,\n   recipeByCategory\n})\n\n// -------------------- Get Parents Category------------------------\nexport const getCategoryParentsAC = (parentsCategory) => ({\n   type: PARENTS_CATEGORY,\n   parentsCategory\n})\n\n// -------------------- Get Article By Category ---------------------\nexport const getArticleByCategoryAC = (articlesCategory) => ({\n   type: ARTICLES_BY_CATEGORY,\n   articlesCategory\n})\n\n// ------------------------- Thunk Creators  -------------------------\n\n// ------------------------- Get all categories  -------------------------\n// export const getCategoriesTC = () =>{\n//    console.log(\"Ушел\")\n//    return (dispatch) => {\n//       getCategoriesAPI()\n//       .then((response) => {console.log(\"Пришел\")\n//       dispatch(getCategoriesAC(response.data))})\n//    }\n// }\n\nexport const getCategoriesTC = () =>{\n   return async (dispatch) => {\n      let response = await getCategoriesAPI()\n      dispatch(getCategoriesAC(response.data))\n   }\n}\n\n// ------------------------- Add category  -------------------------\nexport const addCategoryTC = (title, parentId) =>{\n   return (dispatch) => {\n      addCategoryAPI(title, parentId)\n      .then((response) => {dispatch(getCategoriesTC())})\n   }\n}\n\n// ------------------------- Delete category  -------------------------\nexport const delCategoryTC = (categoryId) =>{\n   return (dispatch) => {\n      delCategoryAPI(categoryId)\n      .then((response) => {dispatch(getCategoriesTC())})\n   }\n}\n\n// ------------------------- Update category  -------------------------\nexport const updateCategoryTC = (_id, title, parentId) => {\n  let data = JSON.stringify({_id, title, parentId: null})\n   return (dispatch) => {\n     updateCategoryAPI(data)\n     .then((response) => {dispatch(getCategoriesTC())})\n   }\n}\n\n// -------------------- Get recipe by category ------------------------\nexport const getRecipeByCategoryTC = (categoryId) =>{\n   return (dispatch) => {\n      getRecipeByCategoryAPI(categoryId)\n      .then((response) => {\n      dispatch(getRecipeByCategoryAC(response.data))})\n   }\n}\n\n// -------------------- Get Category Parents------------------------\nexport const getCategoryListTC = (categoryId) =>{\n   return (dispatch) => {\n      getCategoryParentsAPI(categoryId)\n      .then((response) => {\n      dispatch(getCategoryParentsAC(response.data))})\n   }\n}\n\n// -------------------- Get Article By Category ---------------------\nexport const getArticleByCategoryTC = (categoryId) =>{\n   return (dispatch) => {\n      getArticleByCategoryAPI(categoryId)\n      .then((response) => {\n      dispatch(getArticleByCategoryAC(response.data))})\n   }\n}\n\n// -------------------- Get Full Category Information ---------------------\n\nexport const getFullCategoryInformationTC = (categoryId) =>{\n   return (dispatch) => {\n      // getCategoryParentsAPI(categoryId)\n      // .then((response) => {dispatch(getCategoryParentsAC(response.data))})\n      // getArticleByCategoryAPI(categoryId)\n      // .then((response) => {dispatch(getArticleByCategoryAC(response.data))})\n      // getRecipeByCategoryAPI(categoryId)\n      // .then((response) => {\n      // dispatch(getRecipeByCategoryAC(response.data))})\n      dispatch(getRecipeByCategoryTC(categoryId))\n      dispatch(getCategoryListTC(categoryId))\n      dispatch(getArticleByCategoryTC(categoryId))\n\n   }\n}\n\n\n\n\n\n\n\nexport default categoriesReducer\n","import {combineReducers, createStore, applyMiddleware} from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from 'redux-form'\n\nimport recipesReducer from \"./recipesReducer\"\nimport recipeReducer from \"./recipeReducer\"\nimport articlesReducer from \"./articlesReducer\"\nimport articleReducer from \"./articleReducer\"\n\n\nimport categoriesReducer from './categoriesReducer'\n\nlet reducers = combineReducers({\n   recipesPage: recipesReducer,\n   recipePage: recipeReducer,\n   articlesPage: articlesReducer,\n   articlePage: articleReducer,\n   categoriesPage: categoriesReducer,\n   form: formReducer\n})\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\n\nwindow.store = store\nexport default store\n","import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport \"./menu.css\"\n\nconst MenuCont = () => {\n   return <div className=\"menu\">\n   <NavLink to=\"/categories\" className=\"menuItem\">Категории</NavLink>\n   <NavLink to=\"/recipes\" className=\"menuItem\">Рецепты</NavLink>\n   <NavLink to=\"/articles\" className=\"menuItem\">Статьи</NavLink>\n\n   </div>\n}\n\nexport default MenuCont\n","\nimport {NavLink} from \"react-router-dom\"\nimport \"./Categories.css\"\nimport React from \"react\"\n\nconst Categories = (props) => {\n\n   const showCategories = props.categories.map((e) => {\n      return <div key={e._id} className=\"container\">\n\n            <NavLink to={`/category/${e._id}`}>\n              <span key={e._id}>{e.title} </span>\n            </NavLink>\n              \n            </div>\n   })\n\n   return <div className=\"categories\">\n            <h2>Категории рецептов и статей</h2>\n\n            <NavLink to=\"/categories/addCateg\">Добавить категорию</NavLink>\n            <br /><br />\n            <div>{showCategories}</div>\n   </div>\n}\n\nexport default Categories\n","import React from \"react\"\nimport Categories from \"./Categories\"\nimport {connect} from \"react-redux\"\nimport {getCategoriesTC, delCategoryTC} from \"../../redux/categoriesReducer\"\nimport \"./Categories.css\"\n\nclass CategoriesContainer extends React.Component {\n\n   componentDidMount(props){\n      this.props.getCategoriesTC()\n   }\n\n   render(props){\n      return <Categories\n                categories={this.props.categoriesPage.categories}\n                delCategoryTC={(categoryId) => this.props.delCategoryTC(categoryId)}\n              />\n   }\n}\n\n\n\nlet MapStateToProps = (state) => {\n   return {\n      categoriesPage: state.categoriesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      getCategoriesTC: () => {dispatch(getCategoriesTC())},\n      delCategoryTC: (categoryId) => {dispatch(delCategoryTC(categoryId))}\n   }\n}\nexport default connect(MapStateToProps, MapDispatchToProps) (CategoriesContainer)\n","import React from 'react'\nimport formsStyles from './formsControl.module.css'\n\nexport const TextArea = ({input, meta, ...props}) => {\n   return (\n      <div className={formsStyles.formControl + \" \" + (meta.touched && meta.error ? formsStyles.error : ' ')}>\n         <textarea {...input} {...props} />\n         {meta.touched && meta.error && <span>{meta.error}</span>}\n      </div>\n   )\n}\n\nexport const Input = ({input, meta, ...props}) => {\n   return (\n      <div className={formsStyles.formControl + \" \" + (meta.touched && meta.error ? formsStyles.error : ' ')}>\n         <input {...input} {...props} />\n         {meta.touched && meta.error && <span>{meta.error}</span>}\n      </div>\n   )\n}\n\nexport const Select = ({input, meta, ...props}) => {\n   return (\n      <div>\n         <select {...input} {...props} />\n      </div>\n   )\n}\n","import React, {useState}  from \"react\"\nimport {Field, reduxForm} from 'redux-form'\nimport {Redirect} from 'react-router-dom'\nimport {Input, Select} from './../FormsControl/FormsControl'\nimport \"./Categories.css\"\n\nconst AddCategoriesForm = (props) => {\n\n   let showCategories = props.categoriesPage.categories.map((e) => {\n      return <option key={e._id} value={e._id}>{e.title}</option>\n   })\n\n   return <form onSubmit={props.handleSubmit} className=\"categories\">\n\n      <div>\n         <div><b>Название категории</b></div>\n         <Field\n           name=\"title\"\n           type=\"text\"\n           placeholder=\"Название категории\"\n           component={Input}\n           />\n\n           <div><b>Выберите родительскую категорию</b></div>\n              <Field name=\"parentId\" component={Select}>\n                 {showCategories}\n               </Field>\n\n\n      </div>\n\n      <button>Добавить</button>\n   </form>\n}\n\nconst ReduxAddCategoriesForm = reduxForm ({form: \"addCategories\"}) (AddCategoriesForm)\n\nconst AddCategories = (props) => {\n\n   let [addDone, setEditMode] = useState(false)\n\n   const onSubmit = (formData) =>{\n      props.addCategoryTC(formData.title, formData.parentId)\n      setEditMode(true)\n   }\n\n   if(addDone) return <Redirect to={\"/categories\"} />\n   else\n   return <ReduxAddCategoriesForm\n               onSubmit={onSubmit}\n               categoriesPage={props.categoriesPage}\n            />\n}\n\nexport default AddCategories\n","import React from \"react\"\nimport AddCategories from \"./AddCategories\"\nimport {addCategoryTC} from \"../../redux/categoriesReducer\"\nimport {connect} from \"react-redux\"\n\nconst AddCategoriesContainer = (props) => {\n   return <AddCategories\n               addCategoryTC={props.addCategoryTC}\n               categoriesPage={props.categoriesPage}\n         />\n}\n\nlet MapStateToProps = (state) => {\n   return {\n      categoriesPage: state.categoriesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      addCategoryTC: (title, parentId) => {dispatch(addCategoryTC(title, parentId))}\n   }\n}\n\nexport default connect(MapStateToProps, MapDispatchToProps) (AddCategoriesContainer)\n","// import React from \"react\"\nimport {Field, reduxForm} from 'redux-form'\nimport {connect} from \"react-redux\"\nimport {Redirect} from 'react-router-dom'\nimport {TextArea} from './../FormsControl/FormsControl'\nimport \"./Categories.css\"\nimport {updateCategoryTC} from \"./../../redux/categoriesReducer\"\nimport React, {useState} from 'react'\n\nconst EditCategoriesForm = (props) => {\n   return <form onSubmit={props.handleSubmit} className=\"categories\">\n\n      <div><b>Название категории</b></div>\n         <Field\n            name=\"title\"\n            type=\"text\"\n            component=\"TextArea\">{props.title}\n         </Field>\n         <br />\n\n      <button>Сохранить изменения</button>\n   </form>\n}\n\n\nconst ReduxEditCategoriesForm = reduxForm ({form: \"editCategories\"}) (EditCategoriesForm)\n\n\nconst EditCategories = (props) => {\n  let [editMode, setEditMode] = useState(false)\n\n   const onSubmit = (formData) =>{\n      props.updateCategoryTC(props.id, formData.title)\n      setEditMode(true)\n   }\n\n  if(editMode) return <Redirect to={\"/categories\"} />\n   return <ReduxEditCategoriesForm\n              onSubmit={onSubmit}\n              id={props.id}\n              title={props.title}\n              />\n}\n\n\nconst MapDispatchToProps = (dispatch) => {\n  return {\n    updateCategoryTC: (_id, title) => {\n      dispatch(updateCategoryTC(_id, title))}\n  }\n}\n\n\nexport default connect (null, MapDispatchToProps)(EditCategories)\n","import React, {useState} from \"react\"\nimport {Redirect} from 'react-router-dom'\nimport EditCategory from \"./EditCategory\"\nimport {NavLink} from \"react-router-dom\"\nimport \"./Categories.css\"\n\n\nconst Category = (props) => {\n\n   let parents = props.parentsCategory.map((c) => {\n      return (\n         <NavLink  key={c._id} to={`/category/${c._id}`}> / {c.title}</NavLink>\n      )\n   })\n\n   let recipes = props.recipeByCategory.map((c) => {\n      return (\n         <NavLink  key={c._id} to={`/recipe/${c._id}`}> / {c.title}</NavLink>\n      )\n   })\n\n   let articles = props.articlesCategory.map((c) => {\n      return (\n         <NavLink  key={c._id} to={`/article/${c._id}`}> / {c.title}</NavLink>\n      )\n   })\n\n\n\n\n   let [status, setStatus] = useState(true)\n   const delCat = (categoryId) => {\n      props.delCategoryTC(categoryId)\n      setStatus(false)\n   }\n\n   let [editMode, setEditMode] = useState(false)\n   const editCat = (id, title) => {\n      // props.updateCategoryTC()\n      setEditMode(true)\n   }\n\nif(!status)return <Redirect to={\"/categories\"} />\nif(editMode)return <EditCategory id={props.id} title={props.title}/>\nelse\n   return <div className=\"category\">\n           {}\n           <div><b>Название категории:</b></div>\n           <div>{props.title}</div><br />\n           <div><b>Родительские категории:</b></div>\n           <div>{parents}</div><br />\n           <div><b>Дата последнего изменения:</b></div>\n           <div>{props.updatedAt}</div><br />\n           <div><b>Рецепты данной категории:</b></div>\n           <div>{recipes}</div><br />\n           <div><b>Статьи данной категории:</b></div>\n           <div>{articles}</div>\n\n           <button onClick={() => editCat(props.id, props.title)}>Редактировать</button>\n           <button onClick={() => delCat(props.id)}>Удалить</button>\n   </div>\n}\n\n\nexport default Category\n","import React from \"react\"\nimport Category from \"./Category\"\nimport {connect} from \"react-redux\"\nimport {withRouter} from 'react-router-dom'\nimport {\n   getCategoriesTC,\n   updateCategoryTC,\n   delCategoryTC,\n   getRecipeByCategoryTC,\n   getFullCategoryInformationTC\n} from \"../../redux/categoriesReducer\"\n\nclass CategoryContainer extends React.Component {\n\n  constructor(props) {\n     super(props)\n     this.state = {category: {}\n     }\n  }\n\n   findInfoCategory = (props) => {\n      const category = this.props.categories.filter(c => {\n         return c._id === this.props.match.params.idCat\n      })\n      this.setState({category: category[0]})\n   }\n\nasync componentDidMount(props){\n   // getRecipeByCategoryTC()\n   await this.props.getCategoriesTC()\n      this.findInfoCategory()\n      this.props.getFullCategoryInformationTC(this.props.match.params.idCat)\n   }\n\n//componentDidUpdate(props){\n//      this.findInfoCategory()\n//   }\n\n\n   render(props) {\n      return <Category\n               id={this.state.category._id}\n               title={this.state.category.title}\n               parentId={this.state.category.parentId}\n               updatedAt={this.state.category.updatedAt}\n               delCategoryTC={this.props.delCategoryTC}\n               updateCategoryTC={this.props.updateCategoryTC}\n               recipeByCategory={this.props.recipeByCategory}\n               parentsCategory={this.props.parentsCategory}\n               articlesCategory={this.props.articlesCategory}\n               />\n   }\n}\n\nconst WithUrlCategoryContainer = withRouter(CategoryContainer)\n\nlet MapStateToProps = (state) => {\n   return {\n      categories: state.categoriesPage.categories,\n      recipeByCategory: state.categoriesPage.recipeByCategory,\n      parentsCategory: state.categoriesPage.parentsCategory,\n      articlesCategory: state.categoriesPage.articlesCategory\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n   getCategoriesTC: () => dispatch(getCategoriesTC()),\n   delCategoryTC: (categoryId) => dispatch(delCategoryTC(categoryId)),\n   updateCategoryTC: (id, title) => dispatch(updateCategoryTC(id, title)),\n   getRecipeByCategoryTC: (id) => dispatch(getRecipeByCategoryTC(id)),\n   getFullCategoryInformationTC: (id) => dispatch(getFullCategoryInformationTC(id))\n   }\n}\nexport default connect(MapStateToProps, MapDispatchToProps) (WithUrlCategoryContainer)\n","import React from \"react\"\nimport \"./Recipes.css\"\nimport {NavLink} from \"react-router-dom\"\n// import Recipe from \"./Recipe\"\n\nconst Recipes = (props) => {\n\n   let showRecipes = props.recipes.map((e) => {\n      return (\n         <NavLink  key={e._id} to={`/recipe/${e._id}`}>\n            <div className=\"recipe\" >\n               <div>\n                  <h2>{e.title}</h2>\n               </div>\n               <p>\n                  {e.text}\n               </p>\n               <div>\n               {e.updatedAt}\n               </div>\n            </div>\n         </NavLink>\n      )\n   })\n\n   return (<div className=\"recipes\"><h1>Рецепты</h1>\n\n      <NavLink to=\"/recipes/addRecipe\">Добавить рецепт</NavLink><br />\n      <div>{showRecipes}\n      </div>\n\n\n      </div>)\n}\n\nexport default Recipes\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport Recipes from \"./Recipes\"\nimport {getRecipesTC} from \"./../../redux/recipesReducer\"\n\n//const RecipesContainer = (props) => {\n//   return <Recipes getRecipesTC={getRecipesTC} recipes={props.recipes}/>\n//}\n\nclass RecipesContainer extends React.Component {\n\n   componentDidMount(props){\n      this.props.getRecipesTC()\n   }\n\n   render (){\n      return <Recipes recipes={this.props.recipesPage.recipes} />\n   }\n}\n\nlet MapStateToProps = (state) => {\n   return {\n      recipesPage: state.recipesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      getRecipesTC: () => {dispatch(getRecipesTC())}\n   }\n}\nexport default connect(MapStateToProps, MapDispatchToProps) (RecipesContainer)\n","import React from \"react\"\nimport {Field, reduxForm} from 'redux-form'\nimport {Input, TextArea} from './../FormsControl/FormsControl'\nimport \"./Recipes.css\"\n\nconst AddRecipeForm = (props) => {\n\n   let showCategories = props.categoriesPage.categories.map((e) => {\n      return <option value={e._id}>{e.title}</option>\n   })\n\n   return <form onSubmit={props.handleSubmit} className=\"recipes\">\n      <div>Название рецепта\n         <Field\n           name=\"title\"\n           type=\"text\"\n           placeholder=\"Название рецепта\"\n           component={Input}\n           />\n      </div>\n\n      <div>Текст рецепта\n         <Field\n           name=\"text\"\n           type=\"text\"\n           placeholder=\"Текст рецепта\"\n           component={TextArea}\n           />\n      </div>\n\n      <div>\n         <Field name=\"categoryId\" component=\"Select\">\n            <option>Выберите категорию</option>\n            {showCategories}\n          </Field>\n      </div>\n\n\n\n      <button>Добавить</button>\n   </form>\n}\n\nconst ReduxAddRecipeForm = reduxForm ({form: \"addRecipe\"}) (AddRecipeForm)\n\nconst AddRecipe = (props) => {\n   const onSubmit = (formData) =>{\n\n      props.setRecipeTC(formData.title, formData.text, formData.categoryId)\n\n   }\n\n   return <ReduxAddRecipeForm onSubmit={onSubmit} categoriesPage={props.categoriesPage}/>\n}\n\nexport default AddRecipe\n","import React from \"react\"\nimport AddRecipe from \"./AddRecipe\"\nimport {setRecipeTC} from \"../../redux/recipesReducer\"\nimport {connect} from \"react-redux\"\n\nconst AddRecipeContainer = (props) => {\n   return <AddRecipe setRecipeTC={props.setRecipeTC} categoriesPage={props.categoriesPage}/>\n}\n\nlet MapStateToProps = (state) => {\n   return {\n      categoriesPage: state.categoriesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      setRecipeTC: (title, text, categoryId) => {dispatch(setRecipeTC(title, text, categoryId))}\n   }\n}\n\nexport default connect(MapStateToProps, MapDispatchToProps) (AddRecipeContainer)\n","import {Field, reduxForm} from 'redux-form'\nimport React, {useState} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport \"./Recipes.css\"\nimport {Input, TextArea} from './../FormsControl/FormsControl'\nimport {NavLink} from \"react-router-dom\"\n\nconst Recipe = (props) => {\n\n   let category = props.categoryList.map((c) => {\n      return <NavLink  key={c._id} to={`/category/${c._id}`}> / {c.title}</NavLink>\n\n      // return <span key={c._id}> / {c.title}</span>\n   })\n\n\n   const onSubmit = (formData) =>{\n\n      let createObj = {\n         _id: props.id,\n         title: formData.title || props.title,\n         text: formData.text || props.text,\n         categoryId: props.categoryId\n      }\n\n      props.updateRecipeTC(createObj)\n      setEditMode(false)\n   }\n\n   let [editMode, setEditMode] = useState(false)\n    const modeEdit = () =>{\n       setEditMode(true)\n    }\n\n    let [status, setStatus] = useState(true)\n    const statusEdit = () =>{\n       setStatus(false)\n    }\n\n\n   const statusDelete = () => {\n      props.delResipeTC(props.id)\n      statusEdit()\n   }\n\n   if(!status)return <Redirect to={\"/recipes\"} />\n   return (<>\n      {editMode ?\n         <ReduxRecipeForm\n            id={props.id}\n            title={props.title}\n            text={props.text}\n            date={props.date}\n            onSubmit={onSubmit}\n         /> :\n         <div className=\"recipe\">\n         <h2>{props.title}</h2>\n         <div>{props.text}</div>\n         <br />\n         <div><b>Категории к которым относится рецепт</b></div>\n         <div>{category}</div><br />\n         <div><b>Дата последнего изменения</b></div>\n         <div>{props.date}</div>\n\n         <button onClick={modeEdit}>Редактировать</button>\n         <button onClick={statusDelete}>Удалить</button>\n         </div>\n      }</>)\n\n}\n\n//----------------------------------------------\n\nconst RecipeForm = (props) => {\n\n   return ( <><form onSubmit={props.handleSubmit} className=\"recipe\">\n      <div>Название рецепта</div>\n         <Field\n           name=\"title\"\n           type=\"text\"\n           component=\"TextArea\">{props.title}\n         </Field>\n\n      <div>Текст рецепта</div>\n         <Field\n           name=\"text\"\n           type=\"text\"\n           component=\"TextArea\">{props.text}\n         </Field><br />\n\n      <button>Сохранить изменения</button>\n   </form>\n\n   {/*   <div className=\"recipe\">\n      <div>Название рецепта</div>\n      <textarea defaultValue={props.title}></textarea>\n      <br />\n      <div>Текст</div>\n      <textarea defaultValue={props.text}></textarea>\n      <br />\n      <div>{props.date}</div>\n\n      <button>Сохранить изменения</button>\n   </div>*/}\n   </>)\n\n}\n\n\nconst ReduxRecipeForm = reduxForm ({form: \"editRecipe\"}) (RecipeForm)\n\nexport default Recipe\n","import React from \"react\"\nimport Recipe from \"./Recipe\"\nimport {\n   getRecipeTC,\n   updateRecipeTC,\n   delResipeTC,\n   getCategoryListTC\n} from \"./../../redux/recipeReducer\"\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass RecipeContainer extends React.Component {\n\n   refreshRecipe(){\n      this.props.getRecipeTC(this.props.match.params.recipeId)\n      this.props.getCategoryListTC(this.props.match.params.recipeId)\n   }\n\n   componentDidMount(){\n      this.refreshRecipe()\n\n   }\n\n   componentDidUpdate (prevProps, prevState, snapshot){\n      if(!this.props.categoryList)\n      this.refreshRecipe()\n   }\n\n   render(){\n      return <Recipe\n               id={this.props.match.params.recipeId}\n               title={this.props.title}\n               text={this.props.text}\n               categoryId={this.props.categoryId}\n               date={this.props.date}\n               updateRecipeTC={(obj) => this.props.updateRecipeTC(obj)}\n               delResipeTC={(id) => this.props.delResipeTC(id)}\n               categoryList={this.props.categoryList}\n               />\n   }\n}\n\n\n\nlet MapStateToProps = (state) => {\n   return ({\n      title: state.recipePage.recipe.title,\n      text: state.recipePage.recipe.text,\n      categoryId: state.recipePage.recipe.categoryId,\n      date: state.recipePage.recipe.updatedAt,\n      categoryList: state.recipePage.categoryList\n   })}\n\nlet MapDispatchToProps = (dispatch) => {\n   return ({\n      getRecipeTC: (id) => {dispatch(getRecipeTC(id))},\n      updateRecipeTC: (obj) => {dispatch(updateRecipeTC(obj))},\n      delResipeTC: (id) => {dispatch(delResipeTC(id))},\n      getCategoryListTC: (id) => {dispatch(getCategoryListTC(id))}\n   })\n}\n\nconst WithUrlRecipe = withRouter(RecipeContainer)\n\nexport default connect(MapStateToProps, MapDispatchToProps)(WithUrlRecipe)\n","import React from \"react\"\nimport \"./Articles.css\"\nimport {NavLink} from \"react-router-dom\"\n\nconst Articles = (props) => {\n\n   let showArticles = props.articles.map((e) => {\n      return (\n         <NavLink  key={e._id} to={`/article/${e._id}`}>\n            <div className=\"article\" >\n               <div>\n                  <h2>{e.title}</h2>\n               </div>\n               <p>\n                  {e.description}\n               </p>\n               <div>\n               {e.updatedAt}\n               </div>\n            </div>\n         </NavLink>\n      )\n   })\n\n   return (<div className=\"articles\"><h1>Статьи</h1>\n\n      <NavLink to=\"/articles/addArticle\">Добавить статью</NavLink><br />\n      <div>{showArticles}\n      </div>\n\n\n      </div>)\n}\n\nexport default Articles\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport Articles from \"./Articles\"\nimport {getArticlesTC} from \"./../../redux/articlesReducer\"\n\n\nclass ArticlesContainer extends React.Component {\n\n   componentDidMount(props){\n      this.props.getArticlesTC()\n   }\n\n   render (){\n      return <Articles articles={this.props.articlesPage.articles} />\n   }\n}\n\nlet MapStateToProps = (state) => {\n   return {\n      articlesPage: state.articlesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      getArticlesTC: () => {dispatch(getArticlesTC())}\n   }\n}\nexport default connect(MapStateToProps, MapDispatchToProps) (ArticlesContainer)\n","import React from \"react\"\nimport {Field, reduxForm} from 'redux-form'\nimport {Input, TextArea} from './../FormsControl/FormsControl'\nimport \"./Articles.css\"\n\nconst AddArticleForm = (props) => {\n\n   let showCategories = props.categoriesPage.categories.map((e) => {\n      return <option value={e._id}>{e.title}</option>\n   })\n\n   return <form onSubmit={props.handleSubmit} className=\"articles\">\n      <div>Название рецепта\n         <Field\n           name=\"title\"\n           type=\"text\"\n           placeholder=\"Название статьи\"\n           component={Input}\n           />\n      </div>\n\n      <div>Текст рецепта\n         <Field\n           name=\"description\"\n           type=\"text\"\n           placeholder=\"Краткое описание\"\n           component={TextArea}\n           />\n      </div>\n\n      <div>Текст рецепта\n         <Field\n           name=\"text\"\n           type=\"text\"\n           placeholder=\"Текст статьи\"\n           component={TextArea}\n           />\n      </div>\n\n      <div>\n         <Field name=\"categoryId\" component=\"Select\">\n            <option>Выберите категорию</option>\n            {showCategories}\n          </Field>\n      </div>\n\n\n\n      <button>Добавить</button>\n   </form>\n}\n\nconst ReduxAddArticleForm = reduxForm ({form: \"addArticle\"}) (AddArticleForm)\n\nconst AddArticle = (props) => {\n   const onSubmit = (formData) =>{\n\n      props.setArticleTC(formData.title, formData.description, formData.text, formData.categoryId)\n\n   }\n\n   return <ReduxAddArticleForm onSubmit={onSubmit} categoriesPage={props.categoriesPage}/>\n}\n\nexport default AddArticle\n","import React from \"react\"\nimport AddArticle from \"./AddArticle\"\nimport {setArticleTC} from \"../../redux/articlesReducer\"\nimport {connect} from \"react-redux\"\n\nconst AddArticleContainer = (props) => {\n   return <AddArticle setArticleTC={props.setArticleTC} categoriesPage={props.categoriesPage}/>\n}\n\nlet MapStateToProps = (state) => {\n   return {\n      categoriesPage: state.categoriesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      setArticleTC: (title, description,text, categoryId) => {\n         dispatch(setArticleTC(title, description, text, categoryId))}\n   }\n}\n\nexport default connect(MapStateToProps, MapDispatchToProps) (AddArticleContainer)\n","import {Field, reduxForm} from 'redux-form'\nimport React, {useState} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport \"./Articles.css\"\nimport {Input, TextArea} from './../FormsControl/FormsControl'\nimport {NavLink} from \"react-router-dom\"\n\nconst Article = (props) => {\n\n   let category = props.categoryList.map((c) => {\n      return <NavLink  key={c._id} to={`/category/${c._id}`}> / {c.title}</NavLink>\n\n      // return <span key={c._id}> / {c.title}</span>\n   })\n\n\n   const onSubmit = (formData) =>{\n\n      let createObj = {\n         _id: props.id,\n         title: formData.title || props.title,\n         text: formData.text || props.text,\n         categoryId: props.categoryId\n      }\n\n      props.updateArticleTC(createObj)\n      setEditMode(false)\n   }\n\n   let [editMode, setEditMode] = useState(false)\n    const modeEdit = () =>{\n       setEditMode(true)\n    }\n\n    let [status, setStatus] = useState(true)\n    const statusEdit = () =>{\n       setStatus(false)\n    }\n\n\n   const statusDelete = () => {\n      props.delResipeTC(props.id)\n      statusEdit()\n   }\n\n   if(!status)return <Redirect to={\"/articles\"} />\n   return (<>\n      {editMode ?\n         <ReduxArticleForm\n            id={props.id}\n            title={props.title}\n            description={props.description}\n            text={props.text}\n            date={props.date}\n            onSubmit={onSubmit}\n         /> :\n         <div className=\"article\">\n         <div><b>Название статьи</b></div>\n         <h2>{props.title}</h2>\n         <div><b>Описание статьи</b></div>\n         <div>{props.description}</div><br />\n         <div><b>Статья</b></div>\n         <div>{props.text}</div>\n         <br />\n         <div><b>Категории к которым относится рецепт</b></div>\n         <div>{category}</div><br />\n         <div><b>Дата последнего изменения</b></div>\n         <div>{props.date}</div>\n\n         <button onClick={modeEdit}>Редактировать</button>\n         <button onClick={statusDelete}>Удалить</button>\n         </div>\n      }</>)\n\n}\n\n//----------------------------------------------\n\nconst ArticleForm = (props) => {\n\n   return ( <><form onSubmit={props.handleSubmit} className=\"article\">\n      <div>Название статьи</div>\n         <Field\n           name=\"title\"\n           type=\"text\"\n           component=\"TextArea\">{props.title}\n         </Field>\n\n         <div>Описание статьи</div>\n            <Field\n              name=\"description\"\n              type=\"text\"\n              component=\"TextArea\">{props.description}\n            </Field>\n\n      <div>Статья</div>\n         <Field\n           name=\"text\"\n           type=\"text\"\n           component=\"TextArea\">{props.text}\n         </Field><br />\n\n      <button>Сохранить изменения</button>\n   </form>\n   </>)\n\n}\n\n\nconst ReduxArticleForm = reduxForm ({form: \"editArticle\"}) (ArticleForm)\n\nexport default Article\n","import React from \"react\"\nimport Article from \"./Article\"\nimport {\n   getArticleTC,\n   updateArticleTC,\n   delResipeTC,\n   getCategoryListTC\n} from \"./../../redux/articleReducer\"\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass ArticleContainer extends React.Component {\n\n   refreshArticle(){\n      this.props.getArticleTC(this.props.match.params.articleId)\n      this.props.getCategoryListTC(this.props.match.params.articleId)\n   }\n\n   componentDidMount(){\n      this.refreshArticle()\n\n   }\n\n   componentDidUpdate (prevProps, prevState, snapshot){\n      if(!this.props.categoryList)\n      this.refreshArticle()\n   }\n\n   render(){\n      return <Article\n               id={this.props.match.params.articleId}\n               title={this.props.title}\n               description={this.props.description}\n               text={this.props.text}\n               categoryId={this.props.categoryId}\n               date={this.props.date}\n               updateArticleTC={(obj) => this.props.updateArticleTC(obj)}\n               delResipeTC={(id) => this.props.delResipeTC(id)}\n               categoryList={this.props.categoryList}\n               />\n   }\n}\n\n\n\nlet MapStateToProps = (state) => {\n   return ({\n      title: state.articlePage.article.title,\n      description: state.articlePage.article.description,\n      text: state.articlePage.article.text,\n      categoryId: state.articlePage.article.categoryId,\n      date: state.articlePage.article.updatedAt,\n      categoryList: state.articlePage.categoryList\n   })}\n\nlet MapDispatchToProps = (dispatch) => {\n   return ({\n      getArticleTC: (id) => {dispatch(getArticleTC(id))},\n      updateArticleTC: (obj) => {dispatch(updateArticleTC(obj))},\n      delResipeTC: (id) => {dispatch(delResipeTC(id))},\n      getCategoryListTC: (id) => {dispatch(getCategoryListTC(id))}\n   })\n}\n\nconst WithUrlArticle = withRouter(ArticleContainer)\n\nexport default connect(MapStateToProps, MapDispatchToProps)(WithUrlArticle)\n","import React from 'react';\nimport {Provider} from \"react-redux\"\nimport {connect} from \"react-redux\"\nimport store from \"./redux/reduxStore.js\"\nimport './App.css';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\"\nimport MenuCont from \"./Components/Menu/MenuCont\"\nimport CategoriesContainer from \"./Components/Categories/CategoriesContainer\"\nimport AddCategoriesContainer from \"./Components/Categories/AddCategoreisContainer\"\nimport CategoryContainer from \"./Components/Categories/CategoryContainer\"\nimport RecipesContainer from \"./Components/Recipes/RecipesContainer\"\nimport AddRecipeContainer from './Components/Recipes/AddRecipeContainer'\nimport RecipeContainer from \"./Components/Recipes/RecipeContainer\"\nimport {getCategoriesTC} from \"./redux/categoriesReducer\"\n\nimport ArticlesContainer from \"./Components/Articles/ArticlesContainer\"\nimport AddArticleContainer from './Components/Articles/AddArticleContainer'\nimport ArticleContainer from \"./Components/Articles/ArticleContainer\"\n\nfunction App(props) {\n   return (\n\n         <div className=\"App\">\n            <MenuCont />\n            <div>\n\n               <Route\n                  path=\"/categories/addCateg\"\n                  render={() => <AddCategoriesContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/category/:idCat\"\n                  render={() => <CategoryContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/categories\"\n                  render={() => <CategoriesContainer/>\n                  }\n               />\n\n               <Route\n                  exact path=\"/\"\n                  render={() => <CategoriesContainer/>\n                  }\n               />\n\n               <Route\n                  path=\"/recipes/addRecipe\"\n                  render={() => <AddRecipeContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/recipes\"\n                  render={() => <RecipesContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/recipe/:recipeId\"\n                  render={() => <RecipeContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/articles/addArticle\"\n                  render={() => <AddArticleContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/articles\"\n                  render={() => <ArticlesContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/article/:articleId\"\n                  render={() => <ArticleContainer />\n                  }\n               />\n            </div>\n         </div>\n\n   );\n}\n\n\nclass AppContainer extends React.Component{\n\n   componentDidMount(props){\n      // this.props.getCategoriesTC()\n   }\n\n   render(){\n      return <App />\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      getCategoriesTC: () => dispatch(getCategoriesTC())\n   }\n}\n\nconst AppConnect = withRouter (connect(null, MapDispatchToProps)(AppContainer))\n\nconst AdminPanel = () => {\n   return (\n      <BrowserRouter>\n         <Provider store={store}>\n            <AppConnect />\n         </Provider>\n      </BrowserRouter>\n   )\n}\n\nexport default AdminPanel\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControl_formControl__1vRR6\",\"error\":\"formsControl_error__3H6Ld\",\"formError\":\"formsControl_formError__1Ivxg\"};"],"sourceRoot":""}