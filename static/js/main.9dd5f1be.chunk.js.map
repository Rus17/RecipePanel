{"version":3,"sources":["Components/Recipes/Recipes.jsx","api/api.js","redux/recipesReducer.js","Components/Recipes/RecipesContainer.jsx","Components/FormsControl/FormsControl.jsx","Components/Recipes/AddRecipe.jsx","Components/Recipes/AddRecipeContainer.jsx","Components/Menu/MenuCont.jsx","Components/Categories/Categories.jsx","redux/categoriesReducer.js","Components/Categories/CategoriesContainer.jsx","Components/Categories/AddCategories.jsx","Components/Categories/AddCategoreisContainer.jsx","Components/Categories/EditCategory.jsx","App.jsx","redux/reduxStore.js","index.jsx","Components/FormsControl/formsControl.module.css"],"names":["Recipes","props","showRecipes","recipes","map","e","className","key","_id","title","text","updatedAt","to","server","initialState","getRecipesTC","dispatch","axios","then","response","type","getRecipes","data","setRecipeTC","categoryId","JSON","stringify","headers","setRecipeAPI","recipesReducer","state","action","RecipesContainer","this","recipesPage","React","Component","connect","TextArea","input","meta","formsStyles","formControl","touched","error","Input","ReduxAddRecipeForm","reduxForm","form","showCategories","categoriesPage","categories","value","onSubmit","handleSubmit","Field","name","placeholder","component","AddRecipe","formData","MenuCont","Categories","style","cursor","textDecoration","onClick","delCategoryTC","edit","getCategoriesTC","getCategories","setCategoriesTC","setCategoryAPI","delCategoryAPI","categoriesReducer","CategoriesContainer","ReduxAddCategoriesForm","AddCategories","ReduxEditCategoriesForm","WithUrlEditCateg","withRouter","editCategoriesTC","idCat","match","params","titleCat","App","store","path","render","EditCategory","exact","reducers","combineReducers","formReducer","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9dd5f1be.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Recipes.css\"\nimport {NavLink} from \"react-router-dom\"\n\nconst Recipes = (props) => {\n\n   let showRecipes = props.recipes.map((e) => {\n      return (<div className=\"recipe\" key={e._id}>\n         <div>\n            <h2>{e.title}</h2>\n         </div>\n         <p>\n            {e.text}\n         </p>\n         <div>\n         {e.updatedAt}\n         </div>\n      </div>)\n   })\n\n   return (<div className=\"recipes\"><h1>Рецепты</h1>\n\n      <NavLink to=\"/recipes/addRecipe\">Добавить рецепт</NavLink><br />\n      <div>{showRecipes}\n      </div>\n\n\n      </div>)\n}\n\nexport default Recipes\n","import * as axios from 'axios'\n\nconst server = 'https://test-task-server.herokuapp.com/'\n\n// ------------- Получить рецепты --------------------\nexport const getRecipesAPI = () => {\n   return  axios.get(`${server}api/v1/recipe/all`)\n}\n\n// ------------- Добавить рецепт --------------------\nexport const setRecipeAPI = (title, text, categoryId) => {\n   let data = JSON.stringify({title, text, categoryId})\n   return axios.post(`${server}api/v1/recipe/create`, data, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n\n// -----------------------------------------------------\n\n\n// ------------- Получить категории --------------------\nexport const getCategoriesAPI = () => {\n   return  axios.get(`${server}api/v1/category/all`)\n}\n\n// ------------- Добавить категорию --------------------\nexport const setCategoryAPI = (data) => {\n   data = JSON.stringify({title: data})\n   return axios.post(`${server}api/v1/category/create`, data, {\n      headers: { 'content-type': 'application/json' }\n   })\n}\n\n// ------------- Удалить категорию --------------------\nexport const delCategoryAPI = (categoryId) => {\n   return axios.delete(`${server}api/v1/category/${categoryId}`)\n}\n","import {getRecipesAPI, setRecipeAPI} from './../api/api'\n\nconst GET_RECIPES = 'GET_RECIPES'\n\nlet initialState = {\n   recipes: []\n};\n\nconst recipesReducer = (state = initialState, action) => {\n   switch(action.type) {\n      case GET_RECIPES:\n         return {\n            ...state,\n            recipes: action.getRecipes\n         }\n\n      default:\n         return state;\n   }\n}\n\n// ------------------------- Action Creators -------------------------\n// ------------------------- Get categories -------------------------\nconst getRecipesAC = (getRecipes) => ({\n   type: GET_RECIPES,\n   getRecipes\n})\n\n\n// ------------------------- Thunk Creators  -------------------------\nexport const getRecipesTC = () =>{\n   return (dispatch) => {\n      getRecipesAPI()\n      .then((response) => {dispatch(getRecipesAC(response.data))})\n   }\n}\n\n\n// export const setRecipeTC = () => {\n//    console.log(\"Отправка 3\")\n//    return () => {console.log('Hello world')}}\n\nexport const setRecipeTC = (title, text, categoryId) => {\n   return (dispatch) => {\n      setRecipeAPI(title, text, categoryId)\n      .then(() => {dispatch(getRecipesTC())\n      })\n   }\n}\n\n\n// export const setRecipeTC = (title, text, categoryId) => async (dispatch) => {\n//       let response = await setRecipeAPI(title, text, categoryId)\n//       dispatch(getRecipesTC())\n// }\n\nexport default recipesReducer;\n","import React from \"react\"\nimport {connect} from \"react-redux\"\nimport Recipes from \"./Recipes\"\nimport {getRecipesTC} from \"./../../redux/recipesReducer\"\n\n//const RecipesContainer = (props) => {\n//   return <Recipes getRecipesTC={getRecipesTC} recipes={props.recipes}/>\n//}\n\nclass RecipesContainer extends React.Component {\n\n   componentDidMount(props){\n      this.props.getRecipesTC()\n   }\n\n   render (){\n      return <Recipes recipes={this.props.recipesPage.recipes} />\n   }\n}\n\nlet MapStateToProps = (state) => {\n   return {\n      recipesPage: state.recipesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      getRecipesTC: () => {dispatch(getRecipesTC())}\n   }\n}\nexport default connect(MapStateToProps, MapDispatchToProps) (RecipesContainer)\n","import React from 'react'\nimport formsStyles from './formsControl.module.css'\n\nexport const TextArea = ({input, meta, ...props}) => {\n   return (\n      <div className={formsStyles.formControl + \" \" + (meta.touched && meta.error ? formsStyles.error : ' ')}>\n         <textarea {...input} {...props} />\n         {meta.touched && meta.error && <span>{meta.error}</span>}\n      </div>\n   )\n}\n\nexport const Input = ({input, meta, ...props}) => {\n   return (\n      <div className={formsStyles.formControl + \" \" + (meta.touched && meta.error ? formsStyles.error : ' ')}>\n         <input {...input} {...props} />\n         {meta.touched && meta.error && <span>{meta.error}</span>}\n      </div>\n   )\n}\n\nexport const Select = ({input, meta, ...props}) => {\n   return (\n      <div>\n         <select {...input} {...props} />\n      </div>\n   )\n}\n","import React from \"react\"\nimport {Field, reduxForm} from 'redux-form'\nimport {Input, TextArea} from './../FormsControl/FormsControl'\nimport \"./Recipes.css\"\n\nconst AddRecipeForm = (props) => {\n\nlet showCategories = props.categoriesPage.categories.map((e) => {\n   return <option value={e._id}>{e.title}</option>\n})\n\n   return <form onSubmit={props.handleSubmit} className=\"recipes\">\n      <div>Название рецепта\n         <Field\n           name=\"title\"\n           type=\"text\"\n           placeholder=\"Название рецепта\"\n           component={Input}\n           />\n      </div>\n\n      <div>Текст рецепта\n         <Field\n           name=\"text\"\n           type=\"text\"\n           placeholder=\"Текст рецепта\"\n           component={TextArea}\n           />\n      </div>\n\n      <div>Выберите категорию\n         <Field name=\"categoryId\" component=\"Select\">\n            {showCategories}\n          </Field>\n      </div>\n\n\n\n      <button>Добавить</button>\n   </form>\n}\n\nconst ReduxAddRecipeForm = reduxForm ({form: \"addRecipe\"}) (AddRecipeForm)\n\nconst AddRecipe = (props) => {\n   const onSubmit = (formData) =>{\n      props.setRecipeTC(formData.title, formData.text, formData.categoryId)\n   }\n\n   return <ReduxAddRecipeForm onSubmit={onSubmit} categoriesPage={props.categoriesPage}/>\n}\n\nexport default AddRecipe\n","import React from \"react\"\nimport AddRecipe from \"./AddRecipe\"\nimport {setRecipeTC} from \"../../redux/recipesReducer\"\nimport {connect} from \"react-redux\"\n\nconst AddRecipeContainer = (props) => {\n   return <AddRecipe setRecipeTC={props.setRecipeTC} categoriesPage={props.categoriesPage}/>\n}\n\nlet MapStateToProps = (state) => {\n   return {\n      categoriesPage: state.categoriesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      setRecipeTC: (title, text, categoryId) => {dispatch(setRecipeTC(title, text, categoryId))}\n   }\n}\n\nexport default connect(MapStateToProps, MapDispatchToProps) (AddRecipeContainer)\n","import React from \"react\"\nimport {NavLink} from \"react-router-dom\"\nimport \"./menu.css\"\n\nconst MenuCont = () => {\n   return <div className=\"menu\">\n   <NavLink to=\"/categories\" className=\"menuItem\">Категории</NavLink>\n   <NavLink to=\"/recipes\" className=\"menuItem\">Рецепты</NavLink>\n   <NavLink to=\"/articles\" className=\"menuItem\">Статьи</NavLink>\n\n   </div>\n}\n\nexport default MenuCont\n","\nimport {NavLink} from \"react-router-dom\"\nimport \"./Categories.css\"\nimport React from \"react\"\n\nconst Categories = (props) => {\n\n   const showCategories = props.categories.map((e) => {\n      return <div key={e._id} className=\"container\">\n              <span key={e._id}>{e.title} </span>\n              <span className=\"buttons\">\n\n                   <NavLink to={`/categories/editCateg/${e._id}/${e.title}`}>Редактировать</NavLink>\n\n                   <span>   </span>\n\n                   <span style={{cursor: \"pointer\", textDecoration: \"underline\"}}\n                         onClick={() => {props.delCategoryTC(e._id)}}>Удалить\n                   </span>\n\n               </span>\n            </div>\n   })\n\n   return <div className=\"categories\">\n            <h2>Категории рецептов и статей</h2>\n\n            <NavLink to=\"/categories/addCateg\">Добавить категорию</NavLink>\n            <br /><br />\n            <div>{showCategories}</div>\n   </div>\n}\n\nexport default Categories\n","import {getCategoriesAPI, setCategoryAPI, delCategoryAPI} from \"../api/api\"\n\nconst GET_CATEGORIES = \"GET_CATEGORIES\"\n\nconst initialState = {\n   categories: [],\n   edit: null\n}\n\nconst categoriesReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case GET_CATEGORIES: return {\n         ...state,\n         categories: action.getCategories\n      }\n\n      default: return state\n\n   }\n}\n\n\n\n// ------------------------- Action Creators -------------------------\nexport const getCategoriesAC = (getCategories) => ({\n   type: GET_CATEGORIES,\n   getCategories\n})\n\n// ------------------------- Thunk Creators  -------------------------\n\n// ------------------------- Get all categories  -------------------------\nexport const getCategoriesTC = () =>{\n   return (dispatch) => {\n      getCategoriesAPI()\n      .then((response) => {dispatch(getCategoriesAC(response.data))})\n   }\n}\n\n// ------------------------- Set category  -------------------------\nexport const setCategoriesTC = (data) =>{\n   return (dispatch) => {\n      setCategoryAPI(data)\n      .then((response) => {dispatch(getCategoriesTC())})\n   }\n}\n\n// ------------------------- Delete category  -------------------------\nexport const delCategoryTC = (categoryId) =>{\n   return (dispatch) => {\n      delCategoryAPI(categoryId)\n      .then((response) => {dispatch(getCategoriesTC())})\n   }\n}\n\n\n\n\n\n\n\nexport default categoriesReducer\n","import React from \"react\"\nimport Categories from \"./Categories\"\nimport {connect} from \"react-redux\"\nimport {getCategoriesTC, delCategoryTC} from \"../../redux/categoriesReducer\"\nimport \"./Categories.css\"\n\nclass CategoriesContainer extends React.Component {\n\n   componentDidMount(props){\n      this.props.getCategoriesTC()\n   }\n\n   render(props){\n      return <Categories\n                className=\"container\"\n                categories={this.props.categoriesPage.categories}\n                delCategoryTC={(categoryId) => this.props.delCategoryTC(categoryId)}\n              />\n   }\n}\n\n\n\nlet MapStateToProps = (state) => {\n   return {\n      categoriesPage: state.categoriesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      getCategoriesTC: () => {dispatch(getCategoriesTC())},\n      delCategoryTC: (categoryId) => {dispatch(delCategoryTC(categoryId))}\n   }\n}\nexport default connect(MapStateToProps, MapDispatchToProps) (CategoriesContainer)\n","import React from \"react\"\nimport {Field, reduxForm} from 'redux-form'\nimport {Input} from './../FormsControl/FormsControl'\nimport \"./Categories.css\"\n\nconst AddCategoriesForm = (props) => {\n\n   return <form onSubmit={props.handleSubmit} className=\"categories\">\n\n      <div>Название категории\n         <Field\n           name=\"title\"\n           type=\"text\"\n           placeholder=\"Название категории\"\n           component={Input}\n           />\n      </div>\n\n      <button>Добавить</button>\n   </form>\n}\n\nconst ReduxAddCategoriesForm = reduxForm ({form: \"addCategories\"}) (AddCategoriesForm)\n\nconst AddCategories = (props) => {\n\n   const onSubmit = (formData) =>{\n      props.setCategoriesTC(formData.title)\n   }\n\n   return <ReduxAddCategoriesForm onSubmit={onSubmit}/>\n}\n\nexport default AddCategories\n","import React from \"react\"\nimport AddCategories from \"./AddCategories\"\nimport {setCategoriesTC} from \"../../redux/categoriesReducer\"\nimport {connect} from \"react-redux\"\n\nconst AddCategoriesContainer = (props) => {\n   return <AddCategories setCategoriesTC={props.setCategoriesTC}/>\n}\n\nlet MapStateToProps = (state) => {\n   return {\n      categoriesPage: state.categoriesPage\n   }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      setCategoriesTC: (data) => {dispatch(setCategoriesTC(data))}\n   }\n}\n\nexport default connect(MapStateToProps, MapDispatchToProps) (AddCategoriesContainer)\n","import React from \"react\"\nimport {Field, reduxForm} from 'redux-form'\nimport {Input} from './../FormsControl/FormsControl'\nimport \"./Categories.css\"\nimport {withRouter} from 'react-router-dom'\n\nconst EditCategoriesForm = (props) => {\n   return <form onSubmit={props.handleSubmit} className=\"categories\">\n\n      <div>Название категории\n         <Field\n           name=\"title\"\n           type=\"text\"\n           component={Input}\n           value=\"ghbdt\"\n           />\n      </div>\n\n      <button>Сохранить изменения</button>\n   </form>\n}\n\nconst ReduxEditCategoriesForm = reduxForm ({form: \"editCategories\"}) (EditCategoriesForm)\n\nconst EditCategories = (props) => {\n\n   const onSubmit = (formData) =>{\n      props.editCategoriesTC(formData.title)\n   }\n\n   return <ReduxEditCategoriesForm\n              onSubmit={onSubmit}\n              idCat={props.match.params.idCat}\n              titleCat={props.match.params.titleCat}\n              />\n}\n\nlet WithUrlEditCateg = withRouter(EditCategories)\n\nexport default WithUrlEditCateg\n","import React from 'react';\nimport {Provider} from \"react-redux\"\nimport './App.css';\nimport RecipesContainer from \"./Components/Recipes/RecipesContainer\"\nimport AddRecipeContainer from './Components/Recipes/AddRecipeContainer'\nimport {BrowserRouter, Route} from \"react-router-dom\"\nimport MenuCont from \"./Components/Menu/MenuCont\"\nimport CategoriesContainer from \"./Components/Categories/CategoriesContainer\"\nimport AddCategoriesContainer from \"./Components/Categories/AddCategoreisContainer\"\nimport EditCategory from \"./Components/Categories/EditCategory\"\n\nfunction App(props) {\n   return (\n      <BrowserRouter>\n      <Provider store={props.store}>\n         <div className=\"App\">\n            <MenuCont />\n            <div className=\"container\">\n\n               <Route\n                  path=\"/categories/addCateg\"\n                  render={() => <AddCategoriesContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/categories/editCateg/:idCat/:titleCat\"\n                  render={() => <EditCategory />\n                  }\n               />\n\n               <Route\n                  path=\"/categories\"\n                  render={() => <CategoriesContainer/>\n                  }\n               />\n\n               <Route\n                  exact path=\"/\"\n                  render={() => <CategoriesContainer/>\n                  }\n               />\n\n               <Route\n                  path=\"/recipes/addRecipe\"\n                  render={() => <AddRecipeContainer />\n                  }\n               />\n\n               <Route\n                  path=\"/recipes\"\n                  render={() => <RecipesContainer />\n                  }\n               />\n\n               {/*<Route\n                  path=\"/articles\"\n                  render={\n                  }\n               />*/}\n\n\n\n\n\n            </div>\n         </div>\n      </Provider>\n      </BrowserRouter>\n   );\n}\n\nexport default App;\n","import {combineReducers, createStore, applyMiddleware} from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport {reducer as formReducer} from 'redux-form'\n\nimport recipesReducer from \"./recipesReducer\"\nimport categoriesReducer from './categoriesReducer'\n\nlet reducers = combineReducers({\n   recipesPage: recipesReducer,\n   categoriesPage: categoriesReducer,\n   form: formReducer\n})\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\n\nwindow.store = store\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/reduxStore.js\"\n\nReactDOM.render(<App store={store}/>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControl_formControl__1vRR6\",\"error\":\"formsControl_error__3H6Ld\",\"formError\":\"formsControl_formError__1Ivxg\"};"],"sourceRoot":""}